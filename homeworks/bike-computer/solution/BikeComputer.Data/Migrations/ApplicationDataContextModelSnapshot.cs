// <auto-generated />
using System;
using BikeComputer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BikeComputer.Data.Migrations
{
    [DbContext(typeof(ApplicationDataContext))]
    partial class ApplicationDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("BikeComputer.Data.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Circumference_mm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SerialNumberBikeComputer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ViewedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bikes");
                });

            modelBuilder.Entity("BikeComputer.Data.Ride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AvgSpeed_kmh")
                        .HasColumnType("REAL");

                    b.Property<int>("BikeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfStops")
                        .HasColumnType("INTEGER");

                    b.Property<float>("RideDistance_m")
                        .HasColumnType("REAL");

                    b.Property<float>("RideDuration_s")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("TotalStopTime_s")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.ToTable("Rides");
                });

            modelBuilder.Entity("BikeComputer.Data.Ride", b =>
                {
                    b.HasOne("BikeComputer.Data.Bike", "Bike")
                        .WithMany("Rides")
                        .HasForeignKey("BikeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bike");
                });

            modelBuilder.Entity("BikeComputer.Data.Bike", b =>
                {
                    b.Navigation("Rides");
                });
#pragma warning restore 612, 618
        }
    }
}
